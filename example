using Microsoft.AspNetCore.Mvc;
using PES.WebAPI.Models; // Adjust namespace as per your structure
using PES.WebAPI.Data;   // Assuming ApplicationDbContext is here
using System.Linq;

namespace PES.WebAPI.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class AMLController : ControllerBase
    {
        private readonly ApplicationDbContext _context;

        public AMLController(ApplicationDbContext context)
        {
            _context = context;
        }

        // GET: api/AML?pageNumber=1&pageSize=10
        [HttpGet]
        public IActionResult GetPaginatedAMLs(int pageNumber = 1, int pageSize = 10)
        {
            if (pageNumber < 1) pageNumber = 1;
            if (pageSize < 1) pageSize = 10;

            var totalRecords = _context.AMLs.Count();

            var amls = _context.AMLs
                .OrderBy(a => a.AML_ID) // Make sure AML_ID is a property in your model
                .Skip((pageNumber - 1) * pageSize)
                .Take(pageSize)
                .ToList();

            var response = new
            {
                TotalRecords = totalRecords,
                PageNumber = pageNumber,
                PageSize = pageSize,
                Data = amls
            };

            return Ok(response);
        }

        // GET by ID: api/AML/5
        [HttpGet("{id}")]
        public IActionResult GetAML(int id)
        {
            var aml = _context.AMLs.FirstOrDefault(a => a.AML_ID == id);
            if (aml == null)
            {
                return NotFound();
            }
            return Ok(aml);
        }

        // POST: api/AML
        [HttpPost]
        public IActionResult CreateAML([FromBody] AMLModel aml)
        {
            if (!ModelState.IsValid)
                return BadRequest(ModelState);

            _context.AMLs.Add(aml);
            _context.SaveChanges();

            return Ok(aml);
        }

        // PUT: api/AML/5
        [HttpPut("{id}")]
        public IActionResult UpdateAML(int id, [FromBody] AMLModel aml)
        {
            var existing = _context.AMLs.FirstOrDefault(a => a.AML_ID == id);
            if (existing == null)
                return NotFound();

            // Update fields
            existing.Plan_Number = aml.Plan_Number;
            existing.Status = aml.Status;
            existing.Compliance_Date = aml.Compliance_Date;
            // Add other fields as needed

            _context.SaveChanges();
            return Ok(existing);
        }

        // DELETE: api/AML/5
        [HttpDelete("{id}")]
        public IActionResult DeleteAML(int id)
        {
            var aml = _context.AMLs.FirstOrDefault(a => a.AML_ID == id);
            if (aml == null)
                return NotFound();

            _context.AMLs.Remove(aml);
            _context.SaveChanges();

            return Ok();
        }
    }
}