USE PES
/*Database Design (Manual Tables)*/
CREATE TABLE Deepanshu_AML (
    AML_ID INT IDENTITY(1,1) PRIMARY KEY,
    Plan_Number VARCHAR(20) NOT NULL,
    Status VARCHAR(50) NOT NULL,
    Compliance_Date DATETIME NOT NULL,
    Comments VARCHAR(255) NULL,
    Created_On DATETIME DEFAULT GETDATE()
);
CREATE TABLE Deepanshu_Trustee (
    Trustee_ID INT IDENTITY(1,1) PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    Email VARCHAR(100) NOT NULL,
    Phone VARCHAR(20) NULL,
    Plan_Number VARCHAR(20) NOT NULL,
    Created_On DATETIME DEFAULT GETDATE()
);
CREATE TABLE Deepanshu_SP (
    SP_ID INT IDENTITY(1,1) PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    Service_Type VARCHAR(50) NOT NULL,
    Trustee_ID INT NOT NULL,
    Created_On DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (Trustee_ID) REFERENCES Deepanshu_Trustee(Trustee_ID)
);

INSERT INTO Deepanshu_Trustee (Name, Email, Phone, Plan_Number)
VALUES
('John Trustee', 'john@example.com', '9876543210', 'P123'),
('Mary Trustee', 'mary@example.com', '9988776655', 'P124');
INSERT INTO Deepanshu_AML (Plan_Number, Status, Compliance_Date, Comments)
VALUES
('P123', 'Compliant', GETDATE(), 'No issues'),
('P124', 'Pending', GETDATE(), 'Audit scheduled');
INSERT INTO Deepanshu_SP (Name, Service_Type, Trustee_ID)
VALUES
('Service Partner A', 'Investment', 2),
('Service Partner B', 'Consulting', 4);


SELECT * FROM Deepanshu_AML WITH (NOLOCK);
SELECT * FROM Deepanshu_Trustee WITH (NOLOCK);
SELECT * FROM Deepanshu_SP WITH (NOLOCK);

/*PART 1: SQL CRUD QUERIES (with NOLOCK)*/

INSERT INTO Deepanshu_AML (Plan_Number, Status, Compliance_Date, Comments)
VALUES ('PLAN123', 'Approved', GETDATE(), 'AML verified');

SELECT * 
FROM Deepanshu_AML WITH (NOLOCK);

UPDATE Deepanshu_AML
SET Status = 'Pending', Comments = 'Verification required'
WHERE AML_ID = 1;

DELETE FROM Deepanshu_AML
WHERE AML_ID = 1;

/*Trustee Table (Deepanshu_Trustee)
Insert*/
INSERT INTO Deepanshu_Trustee (Name, Email, Phone, Plan_Number)
VALUES ('John Doe', 'john@example.com', '9876543210', 'PLAN123');

SELECT * 
FROM Deepanshu_Trustee WITH (NOLOCK);

UPDATE Deepanshu_Trustee
SET Email = 'john.doe@trustee.com'
WHERE Trustee_ID = 1;

DELETE FROM Deepanshu_Trustee
WHERE Trustee_ID = 1;

/*3. SP Table (Deepanshu_SP)*/

INSERT INTO Deepanshu_SP (Name, Service_Type, Trustee_ID)
VALUES ('ABC Services', 'Auditing', 1);

SELECT * 
FROM Deepanshu_SP WITH (NOLOCK);

UPDATE Deepanshu_SP
SET Service_Type = 'Advisory'
WHERE SP_ID = 1;

DELETE FROM Deepanshu_SP
WHERE SP_ID = 1;



/*FOR AUTHENTICATION*/

CREATE TABLE Deepanshu_Users (
    User_ID INT IDENTITY(1,1) PRIMARY KEY,
    Username VARCHAR(50) UNIQUE NOT NULL,
    PasswordHash VARCHAR(255) NOT NULL,
    Role VARCHAR(50) NOT NULL,
    Created_On DATETIME DEFAULT GETDATE()
);
SELECT * FROM Deepanshu_Users
INSERT INTO Deepanshu_Users (Username, PasswordHash, Role)
VALUES 
('admin', 'admin123', 'Admin'),
('manager', 'manager123', 'Manager');
INSERT INTO AspNetRoles (Id,Name,NormalizedName,ConcurrencyStamp)
VALUES 
(NEWID(), 'Admin', 'ADMIN',NEWID()),
(NEWID(), 'User', 'User',NEWID()),
(NEWID(), 'Manager', 'Manager',NEWID());

SELECT * FROM Deepanshu_Users

SELECT * FROM AspNetUsers

SELECT * FROM AspNetRoles

SELECT * FROM AspNetUserRoles


/*Identity Authentication*/
CREATE TABLE AspNetUsers (
    Id NVARCHAR(450) PRIMARY KEY,
    UserName NVARCHAR(256) NULL,
    NormalizedUserName NVARCHAR(256) NULL,
    Email NVARCHAR(256) NULL,
    NormalizedEmail NVARCHAR(256) NULL,
    EmailConfirmed BIT NOT NULL DEFAULT 0,
    PasswordHash NVARCHAR(MAX) NULL,
    SecurityStamp NVARCHAR(MAX) NULL,
    ConcurrencyStamp NVARCHAR(MAX) NULL,
    PhoneNumber NVARCHAR(MAX) NULL,
    PhoneNumberConfirmed BIT NOT NULL DEFAULT 0,
    TwoFactorEnabled BIT NOT NULL DEFAULT 0,
    LockoutEnd DATETIMEOFFSET NULL,
    LockoutEnabled BIT NOT NULL DEFAULT 1,
    AccessFailedCount INT NOT NULL DEFAULT 0
);

CREATE TABLE AspNetRoles (
    Id NVARCHAR(450) PRIMARY KEY,
    Name NVARCHAR(256) NULL,
    NormalizedName NVARCHAR(256) NULL,
    ConcurrencyStamp NVARCHAR(MAX) NULL
);

CREATE TABLE AspNetUserRoles (
    UserId NVARCHAR(450) NOT NULL,
    RoleId NVARCHAR(450) NOT NULL,
    PRIMARY KEY (UserId, RoleId),
    FOREIGN KEY (UserId) REFERENCES AspNetUsers (Id) ON DELETE CASCADE,
    FOREIGN KEY (RoleId) REFERENCES AspNetRoles (Id) ON DELETE CASCADE
);


INSERT INTO AspNetRoles (Id, Name, NormalizedName)
VALUES ('1', 'Admin', 'ADMIN'), ('2', 'User', 'USER');
INSERT INTO AspNetUsers (Id, UserName, NormalizedUserName, Email, NormalizedEmail, PasswordHash, EmailConfirmed)
VALUES ('100', 'admin', 'ADMIN', 'admin@example.com', 'ADMIN@EXAMPLE.COM',
'$2a$11$uK9m9rDPO...<HASHED_PASSWORD>', 1);
INSERT INTO AspNetUserRoles (UserId, RoleId)
VALUES ('100', '1');


DELETE FROM AspNetRoles
DELETE FROM AspNetUsers
DELETE FROM AspNetUserRoles

SELECT Id, UserName FROM AspNetUsers
SELECT Id, Name FROM AspNetRoles

INSERT INTO AspNetUserRoles(UserId,RoleId)
VALUES ('<UserId>','<RoleId>')

/*Pagination*/

-- Pagination for AML Table
DECLARE @PageNumber INT = 1;
DECLARE @PageSize INT = 10;

SELECT *
FROM Deepanshu_AML WITH (NOLOCK)
ORDER BY AML_ID
OFFSET (@PageNumber - 1) * @PageSize ROWS
FETCH NEXT @PageSize ROWS ONLY;

-- Total count
SELECT COUNT(*) FROM Deepanshu_AML WITH (NOLOCK);



-- Pagination for Trustee Table

DECLARE @PageNumber INT = 1;
DECLARE @PageSize INT = 10;
SELECT *
FROM Deepanshu_Trustee WITH (NOLOCK)
ORDER BY Trustee_ID
OFFSET (@PageNumber - 1) * @PageSize ROWS
FETCH NEXT @PageSize ROWS ONLY;

-- Total count
SELECT COUNT(*) FROM Deepanshu_Trustee WITH (NOLOCK);


-- Pagination for Service Provider Table

DECLARE @PageNumber INT = 1;
DECLARE @PageSize INT = 10;
SELECT *
FROM Deepanshu_SP WITH (NOLOCK)
ORDER BY SP_ID
OFFSET (@PageNumber - 1) * @PageSize ROWS
FETCH NEXT @PageSize ROWS ONLY;

-- Total count
SELECT COUNT(*) FROM Deepanshu_SP WITH (NOLOCK);
