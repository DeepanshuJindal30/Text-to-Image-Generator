{contactTypes.map((eachContactType, i) => {
  // ---- compute everything first
  const contactTypeId = eachContactType.contactTypeId;
  const contactTypeName = eachContactType.contactTypeName;
  const toggleSwitch = this.state.toggleSwitch;
  const toggleSwitchRules = this.state.toggleSwitchRules;

  // decide disabled state
  const toggleDisabled = !this.props.AddExisting
    ? !!toggleSwitchRules[contactTypeId]
    : false;

  // (optional) skip certain roles
  // if ([Constants.ROLESREGION.AGENTBROKER, Constants.ROLESREGION.RIA].includes(contactTypeId)) {
  //   return null; // returning null is fine in React to render nothing
  // }

  // ---- now RETURN JSX and end the function
  return (
    <div key={contactTypeId ?? i} style={styles.toggleSwitchDiv}>
      <ToggleSwitch
        key={contactTypeId}
        label={contactTypeName}
        valuePath={contactTypeId}
        disabled={toggleDisabled}
        checked={!!toggleSwitch[contactTypeId]}
        onValueChange={(val) => this.handleToggleValue(val, contactTypeId)}
      />
    </div>
  );
})}