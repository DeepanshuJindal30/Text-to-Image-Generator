import React, { useEffect, useState } from "react";
import {
  Box,
  Button,
  Dialog,
  DialogActions,
  DialogContent,
  DialogTitle,
  TextField,
  Typography,
  IconButton,
} from "@mui/material";
import { DataGrid } from "@mui/x-data-grid";
import EditIcon from "@mui/icons-material/Edit";
import DeleteIcon from "@mui/icons-material/Delete";
import api from "../api"; // Make sure this is correctly configured

const AmlList = () => {
  const [amlData, setAmlData] = useState([]);
  const [form, setForm] = useState({
    planNumber: "",
    status: "",
    complianceDate: "",
    comments: "",
  });
  const [open, setOpen] = useState(false);
  const [editId, setEditId] = useState(null);

  const fetchAML = async () => {
    try {
      const response = await api.get("/AML");
      setAmlData(response.data);
    } catch (error) {
      console.error("Error fetching AML data:", error.message);
    }
  };

  useEffect(() => {
    fetchAML();
  }, []);

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleEdit = (row) => {
    setEditId(row.id);
    setForm({
      planNumber: row.plan_Number,
      status: row.status,
      complianceDate: row.compliance_Date,
      comments: row.comments,
    });
    setOpen(true);
  };

  const handleDelete = async (id) => {
    if (!window.confirm("Are you sure you want to delete this record?")) return;
    try {
      await api.delete(`/AML/${id}`);
      fetchAML();
    } catch (error) {
      console.error("Error deleting AML:", error.message);
    }
  };

  const handleSave = async () => {
    const payload = {
      Plan_Number: form.planNumber,
      Status: form.status,
      Compliance_Date: form.complianceDate,
      Comments: form.comments,
    };

    try {
      if (editId) {
        await api.put(`/AML/${editId}`, payload);
      } else {
        await api.post("/AML", payload);
      }
      fetchAML();
      setOpen(false);
      setForm({ planNumber: "", status: "", complianceDate: "", comments: "" });
      setEditId(null);
    } catch (error) {
      console.error("Error saving AML:", error.response?.data || error.message);
      alert("Error saving AML record. Check console for details.");
    }
  };

  const columns = [
    { field: "id", headerName: "ID", width: 90 },
    { field: "plan_Number", headerName: "Plan Number", width: 150 },
    { field: "status", headerName: "Status", width: 130 },
    { field: "compliance_Date", headerName: "Compliance Date", width: 170 },
    { field: "comments", headerName: "Comments", width: 200 },
    {
      field: "actions",
      headerName: "Actions",
      width: 120,
      renderCell: (params) => (
        <>
          <IconButton onClick={() => handleEdit(params.row)} color="primary">
            <EditIcon />
          </IconButton>
          <IconButton onClick={() => handleDelete(params.row.id)} color="error">
            <DeleteIcon />
          </IconButton>
        </>
      ),
    },
  ];

  return (
    <Box sx={{ p: 3 }}>
      <Typography variant="h5" gutterBottom>
        AML Records
      </Typography>

      <Button variant="contained" onClick={() => setOpen(true)} sx={{ mb: 2 }}>
        Add AML
      </Button>

      <div style={{ height: 400, width: "100%" }}>
        <DataGrid rows={amlData} columns={columns} pageSize={5} rowsPerPageOptions={[5]} />
      </div>

      <Dialog open={open} onClose={() => setOpen(false)}>
        <DialogTitle>{editId ? "Edit AML Record" : "Add AML Record"}</DialogTitle>
        <DialogContent>
          <TextField
            margin="dense"
            label="Plan Number"
            name="planNumber"
            value={form.planNumber}
            onChange={handleChange}
            fullWidth
            required
          />
          <TextField
            margin="dense"
            label="Status"
            name="status"
            value={form.status}
            onChange={handleChange}
            fullWidth
            required
          />
          <TextField
            margin="dense"
            label="Compliance Date"
            name="complianceDate"
            type="date"
            value={form.complianceDate}
            onChange={handleChange}
            fullWidth
            InputLabelProps={{ shrink: true }}
            required
          />
          <TextField
            margin="dense"
            label="Comments"
            name="comments"
            value={form.comments}
            onChange={handleChange}
            fullWidth
            multiline
            rows={3}
          />
        </DialogContent>
        <DialogActions>
          <Button onClick={() => setOpen(false)}>Cancel</Button>
          <Button variant="contained" onClick={handleSave}>
            {editId ? "Update" : "Save"}
          </Button>
        </DialogActions>
      </Dialog>
    </Box>
  );
};

export default AmlList;