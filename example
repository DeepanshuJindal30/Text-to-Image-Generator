import React, { useState } from 'react';
import { SdfInput, SdfButton } from '@waypoint/react-components';

export default function Login({ onLogin }) {
  const [formData, setFormData] = useState({
    email: '',
    password: '',
  });

  const handleChange = (field, value) => {
    setFormData({
      ...formData,
      [field]: value,
    });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log('Login data:', formData);
    if (onLogin) onLogin(formData);
  };

  return (
    <div className="flex items-center justify-center h-full p-8">
      <form onSubmit={handleSubmit} className="space-y-4 w-80">
        <SdfInput
          label="Email"
          id="login-email"
          type="email"
          value={formData.email}
          onChange={(e) => handleChange('email', e.target.value)}
        />
        <SdfInput
          label="Password"
          id="login-password"
          type="password"
          value={formData.password}
          onChange={(e) => handleChange('password', e.target.value)}
        />
        <SdfButton type="submit" variant="primary" block>
          Login
        </SdfButton>
      </form>
    </div>
  );
}




import React, { useState } from 'react';
import { SdfInput, SdfButton } from '@waypoint/react-components';

export default function Register({ onRegister }) {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    password: '',
    confirmPassword: '',
  });

  const handleChange = (field, value) => {
    setFormData({
      ...formData,
      [field]: value,
    });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (formData.password !== formData.confirmPassword) {
      alert('Passwords do not match');
      return;
    }
    console.log('Register data:', formData);
    if (onRegister) onRegister(formData);
  };

  return (
    <div className="flex items-center justify-center h-full p-8">
      <form onSubmit={handleSubmit} className="space-y-4 w-80">
        <SdfInput
          label="Full Name"
          id="register-name"
          type="text"
          value={formData.name}
          onChange={(e) => handleChange('name', e.target.value)}
        />
        <SdfInput
          label="Email"
          id="register-email"
          type="email"
          value={formData.email}
          onChange={(e) => handleChange('email', e.target.value)}
        />
        <SdfInput
          label="Password"
          id="register-password"
          type="password"
          value={formData.password}
          onChange={(e) => handleChange('password', e.target.value)}
        />
        <SdfInput
          label="Confirm Password"
          id="register-confirm-password"
          type="password"
          value={formData.confirmPassword}
          onChange={(e) => handleChange('confirmPassword', e.target.value)}
        />
        <SdfButton type="submit" variant="primary" block>
          Register
        </SdfButton>
      </form>
    </div>
  );
}