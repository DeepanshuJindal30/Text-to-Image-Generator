// src/components/Register.jsx
import React, { useState } from "react";
import {
  Container,
  Typography,
  Alert,
  TextField,
  MenuItem,
  Box,
  IconButton,
  InputAdornment,
} from "@mui/material";
import { SdfButton, SdfIcon } from "@waypoint/react-components";
import api from "../api";
import { useNavigate } from "react-router-dom";

export default function Register() {
  const [username, setUsername] = useState("");
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [showPwd, setShowPwd] = useState(false);
  const [role, setRole] = useState("User"); // default role
  const [error, setError] = useState("");
  const navigate = useNavigate();

  const handleRegister = async () => {
    setError("");

    // Email format validation
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
      setError("Please enter a valid email address");
      return;
    }

    // Password strength validation (same as backend)
    const passwordRegex =
      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[^A-Za-z\d]).{8,}$/;
    if (!passwordRegex.test(password)) {
      setError(
        "Password must be at least 8 characters and include uppercase, lowercase, number, and special character."
      );
      return;
    }

    try {
      await api.post("/auth/register", { username, email, password, role });
      alert("User Registered Successfully");
      navigate("/"); // back to login
    } catch (err) {
      setError("Registration Failed: " + (err.response?.data || err.message));
    }
  };

  return (
    <Container maxWidth="sm" sx={{ py: 6 }}>
      {/* Title with icon */}
      <Box sx={{ display: "flex", alignItems: "center", gap: 1, mb: 3, justifyContent: "center" }}>
        <SdfIcon icon="action-add" size="24" />
        <Typography variant="h5" fontWeight={600}>
          Register
        </Typography>
      </Box>

      {/* Card container */}
      <Box
        sx={{
          p: 3,
          borderRadius: 2,
          bgcolor: "#ffffff",
          boxShadow: "0 8px 24px rgba(0,0,0,0.08)",
          border: "1px solid rgba(0,0,0,0.06)",
        }}
      >
        {error && (
          <Alert severity="error" sx={{ mb: 2 }}>
            {error}
          </Alert>
        )}

        {/* Username */}
        <Box sx={{ display: "flex", alignItems: "center", gap: 1, mb: 2 }}>
          <SdfIcon icon="contact-card" />
          <TextField
            label="Username"
            fullWidth
            value={username}
            onChange={(e) => setUsername(e.target.value)}
          />
        </Box>

        {/* Email */}
        <Box sx={{ display: "flex", alignItems: "center", gap: 1, mb: 2 }}>
          <SdfIcon icon="action-email" />
          <TextField
            label="Email"
            fullWidth
            value={email}
            onChange={(e) => setEmail(e.target.value)}
          />
        </Box>

        {/* Password with show/hide */}
        <Box sx={{ display: "flex", alignItems: "center", gap: 1, mb: 2 }}>
          <SdfIcon icon={showPwd ? "action-show" : "action-hide"} />
          <TextField
            label="Password"
            fullWidth
            type={showPwd ? "text" : "password"}
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            InputProps={{
              endAdornment: (
                <InputAdornment position="end">
                  <IconButton onClick={() => setShowPwd((s) => !s)} edge="end">
                    <span style={{ display: "inline-flex" }}>
                      <SdfIcon icon={showPwd ? "action-hide" : "action-show"} />
                    </span>
                  </IconButton>
                </InputAdornment>
              ),
            }}
          />
        </Box>

        {/* Role select */}
        <Box sx={{ display: "flex", alignItems: "center", gap: 1, mb: 2 }}>
          <SdfIcon icon="action-view-settings" />
          <TextField
            label="Role"
            fullWidth
            select
            value={role}
            onChange={(e) => setRole(e.target.value)}
          >
            <MenuItem value="Admin">Admin</MenuItem>
            <MenuItem value="Manager">Manager</MenuItem>
            <MenuItem value="User">User</MenuItem>
          </TextField>
        </Box>

        {/* Submit */}
        <SdfButton
          id="register-button"
          emphasis="primary"
          action="standard"
          onClick={handleRegister}
          style={{ width: "100%", justifyContent: "center", gap: 8 }}
        >
          <SdfIcon icon="action-save" />
          Register
        </SdfButton>
      </Box>

      {/* Optional helper row */}
      <Box sx={{ display: "flex", justifyContent: "center", mt: 2, gap: 1 }}>
        <SdfIcon icon="action-help" />
        <Typography variant="body2" color="text.secondary">
          Already have an account? Go back to the login page.
        </Typography>
      </Box>
    </Container>
  );
}