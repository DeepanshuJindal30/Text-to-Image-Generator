Great! Let's start with 1️⃣ Advanced Table UI for AML Trustee & Service Providers with filters and modals.


---

1️⃣ Project Structure

We’ll create dedicated pages and reusable table component:

src/
├── components/
│   ├── Layout.jsx
│   └── CustomTable.jsx   <-- Reusable Material UI table with filters + modals
│
├── pages/
│   ├── AMLPage.jsx       <-- AML Trustee table (filtered data)
│   ├── SPPage.jsx        <-- Service Providers table
│   └── UploadsPage.jsx   <-- Upload data table


---

2️⃣ Create CustomTable.jsx (Reusable Table)

import React, { useState } from "react";
import {
  Box, Table, TableBody, TableCell, TableContainer, TableHead, TableRow,
  Paper, TextField, Button, Dialog, DialogTitle, DialogContent, DialogActions
} from "@mui/material";

const CustomTable = ({ columns, rows, filters = [], title }) => {
  const [filterValues, setFilterValues] = useState({});
  const [openModal, setOpenModal] = useState(false);
  const [modalData, setModalData] = useState(null);

  // Filter rows dynamically
  const filteredRows = rows.filter((row) =>
    Object.entries(filterValues).every(([key, val]) =>
      val ? String(row[key]).toLowerCase().includes(val.toLowerCase()) : true
    )
  );

  const handleOpenModal = (row) => {
    setModalData(row);
    setOpenModal(true);
  };

  return (
    <Box>
      {/* Filters */}
      <Box sx={{ display: "flex", gap: 2, mb: 2 }}>
        {filters.map((filter) => (
          <TextField
            key={filter.field}
            label={filter.label}
            size="small"
            variant="outlined"
            onChange={(e) =>
              setFilterValues({ ...filterValues, [filter.field]: e.target.value })
            }
          />
        ))}
      </Box>

      {/* Table */}
      <TableContainer component={Paper}>
        <Table>
          <TableHead sx={{ bgcolor: "#E2E8F0" }}>
            <TableRow>
              {columns.map((col) => (
                <TableCell key={col.field}>{col.headerName}</TableCell>
              ))}
              <TableCell>Action</TableCell>
            </TableRow>
          </TableHead>
          <TableBody>
            {filteredRows.map((row, index) => (
              <TableRow key={index}>
                {columns.map((col) => (
                  <TableCell key={col.field}>{row[col.field]}</TableCell>
                ))}
                <TableCell>
                  <Button variant="outlined" size="small" onClick={() => handleOpenModal(row)}>
                    View
                  </Button>
                </TableCell>
              </TableRow>
            ))}
          </TableBody>
        </Table>
      </TableContainer>

      {/* Modal */}
      <Dialog open={openModal} onClose={() => setOpenModal(false)}>
        <DialogTitle>Details</DialogTitle>
        <DialogContent>
          {modalData &&
            Object.entries(modalData).map(([key, val]) => (
              <p key={key}>
                <b>{key}:</b> {val}
              </p>
            ))}
        </DialogContent>
        <DialogActions>
          <Button onClick={() => setOpenModal(false)}>Close</Button>
        </DialogActions>
      </Dialog>
    </Box>
  );
};

export default CustomTable;


---

3️⃣ Create AMLPage.jsx

import React, { useEffect, useState } from "react";
import Layout from "../components/Layout";
import CustomTable from "../components/CustomTable";
import api from "../api";

export default function AMLPage() {
  const [rows, setRows] = useState([]);

  useEffect(() => {
    const fetchAML = async () => {
      const res = await api.get("/trusteeamlplans");
      setRows(res.data);
    };
    fetchAML();
  }, []);

  return (
    <Layout>
      <h2>AML Trustee Data</h2>
      <CustomTable
        title="AML Trustee"
        columns={[
          { field: "planNumber", headerName: "Plan Number" },
          { field: "category", headerName: "Category" },
          { field: "status", headerName: "Status" },
        ]}
        filters={[
          { field: "planNumber", label: "Filter by Plan Number" },
          { field: "category", label: "Filter by Category" },
        ]}
        rows={rows}
      />
    </Layout>
  );
}


---

4️⃣ Create SPPage.jsx

import React, { useEffect, useState } from "react";
import Layout from "../components/Layout";
import CustomTable from "../components/CustomTable";
import api from "../api";

export default function SPPage() {
  const [rows, setRows] = useState([]);

  useEffect(() => {
    const fetchSP = async () => {
      const res = await api.get("/serviceproviders");
      setRows(res.data);
    };
    fetchSP();
  }, []);

  return (
    <Layout>
      <h2>Service Providers</h2>
      <CustomTable
        title="Service Providers"
        columns={[
          { field: "spId", headerName: "SP ID" },
          { field: "spName", headerName: "SP Name" },
          { field: "status", headerName: "Status" },
        ]}
        filters={[
          { field: "spName", label: "Filter by SP Name" },
          { field: "status", label: "Filter by Status" },
        ]}
        rows={rows}
      />
    </Layout>
  );
}


---

5️⃣ Update App.js Routes

import AMLPage from "./pages/AMLPage";
import SPPage from "./pages/SPPage";

<Routes>
  <Route path="/aml" element={<AMLPage />} />
  <Route path="/sp" element={<SPPage />} />
</Routes>


---

What This Gives You

✅ Search/Filter for columns like Plan Number, Category, Status
✅ Reusable Table (just change columns and filters)
✅ Modal pop-up for row details (no need for extra page)
✅ Clean Material UI look


---

👉 Do you want me to now connect this with Dashboard sidebar (so clicking "AML Trustee" or "Service Providers" opens these pages)?
Or should I add role-based access (Admin/User) at the same time?

