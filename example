import React, { useEffect, useState } from "react";
import Layout from "../components/Layout";
import CustomTable from "../components/CustomTable";
import ModalForm from "../components/ModalForm";
import api from "../api";

export default function AMLPage() {
  const [rows, setRows] = useState([]);
  const [open, setOpen] = useState(false);
  const [editRow, setEditRow] = useState(null);

  // Fetch data
  const fetchAML = async () => {
    try {
      const res = await api.get("/AML");
      console.log("Fetched AML:", res.data); // Debug
      setRows(res.data);
    } catch (err) {
      console.error("Error fetching AML:", err);
    }
  };

  // Add new record
  const handleAdd = async (data) => {
    try {
      await api.post("/AML", data);
      setOpen(false);
      fetchAML();
    } catch (err) {
      console.error("Error adding AML:", err);
    }
  };

  // Edit record
  const handleEdit = async (data) => {
    try {
      await api.put(`/AML/${data.aml_ID}`, data);
      setOpen(false);
      fetchAML();
    } catch (err) {
      console.error("Error updating AML:", err);
    }
  };

  // Delete record
  const handleDelete = async (id) => {
    try {
      await api.delete(`/AML/${id}`);
      fetchAML();
    } catch (err) {
      console.error("Error deleting AML:", err);
    }
  };

  useEffect(() => {
    fetchAML();
  }, []);

  return (
    <Layout>
      <h2>AML Records</h2>
      <button onClick={() => { setEditRow(null); setOpen(true); }}>
        + Add AML
      </button>

      <CustomTable
        searchField="planNumber"
        columns={[
          { field: "planNumber", headerName: "Plan Number" },
          { field: "status", headerName: "Status" },
          { field: "complianceDate", headerName: "Compliance Date" },
          { field: "comments", headerName: "Comments" },
        ]}
        rows={rows}
        onEdit={(row) => { setEditRow(row); setOpen(true); }}
        onDelete={handleDelete}
      />

      {/* ModalForm for Add/Edit */}
      <ModalForm
        open={open}
        onClose={() => setOpen(false)}
        initialData={editRow}
        fields={[
          { name: "planNumber", label: "Plan Number" },
          { name: "status", label: "Status" },
          { name: "complianceDate", label: "Compliance Date", type: "date" },
          { name: "comments", label: "Comments" },
        ]}
        onSubmit={(data) => editRow ? handleEdit(data) : handleAdd(data)}
      />
    </Layout>
  );
}  

// // using Dapper;
// // using PES.WebAPI.Data;
// // using Microsoft.AspNetCore.Authorization;
// // using Microsoft.AspNetCore.Mvc;

// // namespace PES.WebAPI.Controllers
// // {
// //     [ApiController]
// //     [Route("api/[controller]")]
// //    //[Authorize(Roles = "Admin")]  // Role-based auth can be added later
// //     public class AMLController : ControllerBase
// //     {
// //         private readonly DapperContext _context;
// //         public AMLController(DapperContext context)
// //         {
// //             _context = context;
// //         }

// //         // GET All
// //         [AllowAnonymous]
// //         [HttpGet]
// //         public async Task<IActionResult> GetAll()
// //         {
// //             var sql = "SELECT * FROM Deepanshu_AML WITH (NOLOCK)";
// //             using var conn = _context.CreateConnection();
// //             var data = await conn.QueryAsync(sql);
// //             return Ok(data);
// //         }

// //         // GET by ID
// //         [HttpGet("{id}")]
// //         public async Task<IActionResult> GetById(int id)
// //         {
// //             var sql = "SELECT * FROM Deepanshu_AML WITH (NOLOCK) WHERE AML_ID = @id";
// //             using var conn = _context.CreateConnection();
// //             var data = await conn.QuerySingleOrDefaultAsync(sql, new { id });
// //             if (data == null) return NotFound();
// //             return Ok(data);
// //         }

// //         // POST
// //         [HttpPost]
// //         public async Task<IActionResult> Create([FromBody] dynamic model)
// //         {
// //             var sql = @"INSERT INTO Deepanshu_AML (Plan_Number, Status, Compliance_Date, Comments)
// //                     VALUES (@Plan_Number, @Status, @Compliance_Date, @Comments)";
// //             using var conn = _context.CreateConnection();
          
// //             var rows = await conn.ExecuteAsync(sql,(object) model);

// //             return rows > 0 ? Ok("Inserted") : BadRequest();
// //         }

// //         // PUT
// //         [HttpPut("{id}")]
// //         public async Task<IActionResult> Update(int id, [FromBody] dynamic model)
// //         {
// //             var sql = @"UPDATE Deepanshu_AML SET Plan_Number=@Plan_Number, Status=@Status, 
// //                     Compliance_Date=@Compliance_Date, Comments=@Comments WHERE AML_ID=@id";
// //             using var conn = _context.CreateConnection();
// //             var rows = await conn.ExecuteAsync(sql, new
// //             {
// //                 model.Plan_Number,
// //                 model.Status,
// //                 model.Compliance_Date,
// //                 model.Comments,
// //                 id
// //             });
// //             return rows > 0 ? Ok("Updated") : NotFound();
// //         }

// //         // DELETE
// //         [HttpDelete("{id}")]
// //         public async Task<IActionResult> Delete(int id)
// //         {
// //             var sql = "DELETE FROM Deepanshu_AML WHERE AML_ID=@id";
// //             using var conn = _context.CreateConnection();
// //             var rows = await conn.ExecuteAsync(sql, new { id });
// //             return rows > 0 ? Ok("Deleted") : NotFound();
// //         }
// //     }

// // }
// using Dapper;
// using Microsoft.AspNetCore.Mvc;
// using PES.WebAPI.Data;
// using PES.WebAPI.Models;

// [ApiController]
// [Route("api/[controller]")]
// public class AMLController : ControllerBase
// {
//     private readonly DapperContext _context;

//     public AMLController(DapperContext context)
//     {
//         _context = context;
//     }

//     [HttpPost]
//     public async Task<IActionResult> Create([FromBody] AMLModel model)
//     {
//         var sql = @"INSERT INTO Deepanshu_AML (Plan_Number, Status, Compliance_Date, Comments)
//                     VALUES (@Plan_Number, @Status, @Compliance_Date, @Comments)";

//         using var conn = _context.CreateConnection();
//         await conn.ExecuteAsync(sql, model);

//         return Ok("AML record inserted successfully");
//     }

//     [HttpGet]
//     public async Task<IActionResult> GetAll()
//     {
//         var sql = "SELECT * FROM Deepanshu_AML WITH (NOLOCK)";
//         using var conn = _context.CreateConnection();
//         var data = await conn.QueryAsync(sql);
//         return Ok(data);
//     }
// }
using Microsoft.AspNetCore.Mvc;
using Dapper;
using PES.WebAPI.Data;
using PES.WebAPI.Models;

[ApiController]
[Route("api/[controller]")]
public class AMLController : ControllerBase
{
    private readonly DapperContext _context;

    public AMLController(DapperContext context)
    {
        _context = context;
    }

    // ➡ CREATE (POST)
    [HttpPost]
    public async Task<IActionResult> Create([FromBody] AMLModel model)
    {
        using var conn = _context.CreateConnection();
        var sql = @"INSERT INTO Deepanshu_AML (Plan_Number, Status, Compliance_Date, Comments)
                    VALUES (@Plan_Number, @Status, @Compliance_Date, @Comments)";
        await conn.ExecuteAsync(sql, model);
        return Ok("AML record inserted successfully");
    }

    // ➡ READ (GET All)
    [HttpGet]
    public async Task<IActionResult> GetAll()
    {
        using var conn = _context.CreateConnection();
        var sql = "SELECT * FROM Deepanshu_AML WITH (NOLOCK)";
        var data = await conn.QueryAsync(sql);
        return Ok(data);
    }

    // ➡ READ (GET by ID)
    [HttpGet("{id}")]
    public async Task<IActionResult> GetById(int id)
    {
        using var conn = _context.CreateConnection();
        var sql = "SELECT * FROM Deepanshu_AML WITH (NOLOCK) WHERE AML_ID = @AML_ID";
        var aml = await conn.QueryFirstOrDefaultAsync(sql, new { AML_ID = id });

        if (aml == null)
            return NotFound($"AML record with ID {id} not found.");

        return Ok(aml);
    }

    // ➡ UPDATE (PUT)
    [HttpPut("{id}")]
    public async Task<IActionResult> Update(int id, [FromBody] AMLModel model)
    {
        using var conn = _context.CreateConnection();

        var exists = await conn.ExecuteScalarAsync<int>(
            "SELECT COUNT(1) FROM Deepanshu_AML WHERE AML_ID = @AML_ID", new { AML_ID = id });

        if (exists == 0)
            return NotFound($"AML record with ID {id} not found.");

        var sql = @"UPDATE Deepanshu_AML 
                    SET Plan_Number = @Plan_Number, Status = @Status, Compliance_Date = @Compliance_Date, Comments = @Comments
                    WHERE AML_ID = @AML_ID";

        await conn.ExecuteAsync(sql, new
        {
            model.Plan_Number,
            model.Status,
            model.Compliance_Date,
            model.Comments,
            AML_ID = id
        });

        return Ok($"AML record with ID {id} updated successfully");
    }

    // ➡ DELETE
    [HttpDelete("{id}")]
    public async Task<IActionResult> Delete(int id)
    {
        using var conn = _context.CreateConnection();
        var sql = "DELETE FROM Deepanshu_AML WHERE AML_ID = @AML_ID";
        var rows = await conn.ExecuteAsync(sql, new { AML_ID = id });

        if (rows == 0)
            return NotFound($"AML record with ID {id} not found.");

        return Ok($"AML record with ID {id} deleted successfully");
    }
}


import React from "react";
import { Routes, Route, Link } from "react-router-dom";
import Login from "./components/Login";
import AMLList from "./components/AMLList";
import TrusteeList from "./components/TrusteeList";
import SPList from "./components/SPList";
import Register from "./components/Register";

export default function App() {
  return (
    <div>
      <nav style={{ padding: "10px", background: "#f5f5f5" }}>
        <Link to="/aml" style={{ marginRight: "15px" }}>AML</Link>
        <Link to="/trustee" style={{ marginRight: "15px" }}>Trustee</Link>
        <Link to="/sp" style={{ marginRight: "15px" }}>Service Providers</Link>
        <Link to="/register" style={{ marginRight: "15px" }}>Register</Link>
      </nav>

      <Routes>
        <Route path="/" element={<Login />} />
        <Route path="/aml" element={<AMLList />} />
        <Route path="/trustee" element={<TrusteeList />} />
        <Route path="/sp" element={<SPList />} />
        <Route path="/register" element={<Register />} />
      </Routes>
    </div>
  );
}
// import { BrowserRouter as Router, Routes, Route } from "react-router-dom";

// import Login from "./components/Login";
// import Register from "./components/Register";

// import DashboardPage from "./pages/DashboardPage";
// import AMLPage from "./pages/AMLPage";
// import TrusteePage from "./pages/TrusteePage";
// import SPPage from "./pages/SPPage";

// function App() {
//   return (
   
//       <Routes>
//         {/* Auth */}
//         <Route path="/" element={<Login />} />
//         <Route path="/register" element={<Register />} />

//         {/* Dashboard & Pages */}
//         <Route path="/dashboard" element={<DashboardPage />} />
//         <Route path="/aml" element={<AMLPage />} />
//         <Route path="/trustee" element={<TrusteePage />} />
//         <Route path="/sp" element={<SPPage />} />
//       </Routes>
  
//   );
// }

// export default App;
