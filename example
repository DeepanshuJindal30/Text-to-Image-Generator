
import React, { useState } from "react";
import { Button, TextField, Container, Typography } from "@mui/material";
import api from "../api";
import { useNavigate } from "react-router-dom";
import { useDispatch } from "react-redux";
import { setAuth } from "../redux/slices/authSlice";
import { SdfButton } from "@waypoint/react-components";

export default function Login() {
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");
  const navigate = useNavigate();
  const dispatch = useDispatch();

  const handleLogin = async () => {
  try {
    const res = await api.post("/auth/login", { 
      usernameOrEmail: username,  // âœ… match backend property
      password 
    });

    localStorage.setItem("token", res.data.token);
    localStorage.setItem("roles", JSON.stringify(res.data.roles));

    api.defaults.headers.common["Authorization"] = `Bearer ${res.data.token}`;
    dispatch(setAuth({ token: res.data.token, roles: res.data.roles }));

    alert("Login Successful");

    if (res.data.roles.includes("Admin")) {
      navigate("/aml");
    } else if (res.data.roles.includes("Manager")) {
      navigate("/trustee");
    } else {
      navigate("/sp");
    }
  } catch (err) {
    alert("Login Failed: " + (err.response?.data || err.message));
  }
};

  return (
    <Container maxWidth="sm">
      <Typography variant="h4" gutterBottom>
        Login
      </Typography>
      <TextField
        label="Username or Email"
        fullWidth
        margin="normal"
        value={username}
        onChange={(e) => setUsername(e.target.value)}
      />
      <TextField
        label="Password"
        type="password"
        fullWidth
        margin="normal"
        value={password}
        onChange={(e) => setPassword(e.target.value)}
      />
      <SdfButton variant="contained" fullWidth onClick={handleLogin}>
        Login
      </SdfButton>
    </Container>
  );
}
