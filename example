
              <TableCell>Trustee_ID</TableCell>
              <TableCell>Name</TableCell>
              <TableCell>Email</TableCell>
              <TableCell>Phone</TableCell>
              <TableCell>Plan Number</TableCell>
              <TableCell>Actions</TableCell>
            </TableRow>
          </TableHead>
          <TableBody>
            {filtered.length > 0 ? (
              filtered
                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)
                .map((t) => (
                  <TableRow key={t.trustee_ID || t.Trustee_ID}>
                    <TableCell>{t.trustee_ID || t.Trustee_ID}</TableCell>
                    <TableCell>{t.name || t.Name}</TableCell>
                    <TableCell>{t.email || t.Email}</TableCell>
                    <TableCell>{t.phone || t.Phone}</TableCell>
                    <TableCell>{t.plan_Number || t.Plan_Number}</TableCell>
                    <TableCell>
                      <Button onClick={() => handleEdit(t)}>Edit</Button>
                      <Button
                        color="error"
                        onClick={() =>
                          handleDelete(t.trustee_ID || t.Trustee_ID)
                        }
                      >
                        Delete
                      </Button>
                    </TableCell>
                  </TableRow>
                ))
            ) : (
              <TableRow>
                <TableCell colSpan={6} align="center">
                  No records found
                </TableCell>
              </TableRow>
            )}
          </TableBody>
        </Table>
      </div>

      {/* Pagination */}
      <TablePagination
        rowsPerPageOptions={[5, 10, 25]}
        component="div"
        count={filtered.length}
        rowsPerPage={rowsPerPage}
        page={page}
        onPageChange={(e, newPage) => setPage(newPage)}
        onRowsPerPageChange={(e) => {
          setRowsPerPage(parseInt(e.target.value, 10));
          setPage(0);
        }}
      />

      {/* Modal Form */}
      <Dialog open={open} onClose={() => setOpen(false)}>
        <DialogTitle>{editId ? "Edit Trustee" : "Add Trustee"}</DialogTitle>
        <DialogContent>
          <TextField
            fullWidth
            label="Name"
            margin="normal"
            value={form.name}
            onChange={(e) => setForm({ ...form, name: e.target.value })}
          />
          <TextField
            fullWidth
            label="Email"
            margin="normal"
            value={form.email}
            onChange={(e) => setForm({ ...form, email: e.target.value })}
          />
          <TextField
            fullWidth
            label="Phone"
            margin="normal"
            value={form.phone}
            onChange={(e) => setForm({ ...form, phone: e.target.value })}
          />
          <TextField
            fullWidth
            label="Plan Number"
            margin="normal"
            value={form.planNumber}
            onChange={(e) =>
              setForm({ ...form, planNumber: e.target.value })
            }
          />
        </DialogContent>
        <DialogActions>
          <Button onClick={() => setOpen(false)}>Cancel</Button>
          <Button variant="contained" onClick={handleSave}>
            Save
          </Button>
        </DialogActions>
      </Dialog>
    </Container>
  );
}
import { Routes, Route } from "react-router-dom";
import Login from "./components/Login";
import AMLList from "./components/AMLList";
import TrusteeList from "./components/TrusteeList";
import SPList from "./components/SPList";
import Register from "./components/Register";
import Navbar from "./components/NavBar"; // ✅ Import

export default function App() {
  return (
    <div>
      <Navbar /> {/* ✅ Use the dynamic navbar */}

      <Routes>
        <Route path="/" element={<Login />} />
        <Route path="/aml" element={<AMLList />} />
        <Route path="/trustee" element={<TrusteeList />} />
        <Route path="/sp" element={<SPList />} />
        <Route path="/register" element={<Register />} />
      </Routes>
    </div>
  );
}
