import React, { useState } from 'react';

export default function Login({ onLogin }) {
  const [formData, setFormData] = useState({
    email: '',
    password: '',
  });

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value,
    });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    // TODO: API call for login
    console.log('Login form submitted', formData);
    if (onLogin) onLogin(formData);
  };

  return (
    <div className="login-container">
      <h2>Login</h2>
      <form onSubmit={handleSubmit}>
        <sdf-textfield
          label="Email"
          type="email"
          name="email"
          value={formData.email}
          onChange={handleChange}
          required
        ></sdf-textfield>

        <sdf-textfield
          label="Password"
          type="password"
          name="password"
          value={formData.password}
          onChange={handleChange}
          required
        ></sdf-textfield>

        <sdf-button type="submit" variant="primary">
          Login
        </sdf-button>
      </form>
    </div>
  );
}





import React, { useState } from 'react';

export default function Register({ onRegister }) {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    password: '',
    confirmPassword: '',
  });

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value,
    });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (formData.password !== formData.confirmPassword) {
      alert('Passwords do not match');
      return;
    }
    // TODO: API call for registration
    console.log('Registration form submitted', formData);
    if (onRegister) onRegister(formData);
  };

  return (
    <div className="register-container">
      <h2>Register</h2>
      <form onSubmit={handleSubmit}>
        <sdf-textfield
          label="Full Name"
          type="text"
          name="name"
          value={formData.name}
          onChange={handleChange}
          required
        ></sdf-textfield>

        <sdf-textfield
          label="Email"
          type="email"
          name="email"
          value={formData.email}
          onChange={handleChange}
          required
        ></sdf-textfield>

        <sdf-textfield
          label="Password"
          type="password"
          name="password"
          value={formData.password}
          onChange={handleChange}
          required
        ></sdf-textfield>

        <sdf-textfield
          label="Confirm Password"
          type="password"
          name="confirmPassword"
          value={formData.confirmPassword}
          onChange={handleChange}
          required
        ></sdf-textfield>

        <sdf-button type="submit" variant="primary">
          Register
        </sdf-button>
      </form>
    </div>
  );
}