import React, { useState, useEffect } from "react";
import {
  Dialog, DialogTitle, DialogContent, DialogActions,
  TextField, Button, Table, TableBody, TableCell, TableHead, TableRow
} from "@mui/material";
import api from "../api"; // your axios base instance

const AMLList = () => {
  const [amlList, setAmlList] = useState([]);
  const [open, setOpen] = useState(false);
  const [form, setForm] = useState({
    planNumber: "",
    status: "",
    complianceDate: "",
    comments: ""
  });
  const [editId, setEditId] = useState(null); // we'll use Plan_Number for edits

  const fetchAml = async () => {
    try {
      const res = await api.get("/AML");
      setAmlList(res.data);
    } catch (err) {
      console.error(err);
    }
  };

  useEffect(() => {
    fetchAml();
  }, []);

  const handleOpen = () => {
    setOpen(true);
    setForm({ planNumber: "", status: "", complianceDate: "", comments: "" });
    setEditId(null);
  };

  const handleClose = () => {
    setOpen(false);
    setForm({ planNumber: "", status: "", complianceDate: "", comments: "" });
    setEditId(null);
  };

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSave = async () => {
    const payload = {
      Plan_Number: form.planNumber,
      Status: form.status,
      Compliance_Date: form.complianceDate,
      Comments: form.comments
    };

    try {
      if (editId) {
        await api.put(`/AML/${editId}`, payload);
      } else {
        await api.post("/AML", payload);
      }
      fetchAml();
      handleClose();
    } catch (err) {
      console.error(err);
      alert("Error saving AML record");
    }
  };

  const handleEdit = (aml) => {
    setEditId(aml.plan_Number);
    setForm({
      planNumber: aml.plan_Number,
      status: aml.status,
      complianceDate: aml.compliance_Date?.slice(0, 10) || "", // format for date input
      comments: aml.comments || ""
    });
    setOpen(true);
  };

  const handleDelete = async (planNumber) => {
    if (window.confirm("Delete this AML record?")) {
      try {
        await api.delete(`/AML/${planNumber}`);
        fetchAml();
      } catch (err) {
        console.error(err);
        alert("Delete failed");
      }
    }
  };

  return (
    <div style={{ padding: 20 }}>
      <h2>AML Records</h2>
      <Button variant="contained" onClick={handleOpen}>
        Add AML
      </Button>

      <Table>
        <TableHead>
          <TableRow>
            <TableCell>Plan Number</TableCell>
            <TableCell>Status</TableCell>
            <TableCell>Compliance Date</TableCell>
            <TableCell>Comments</TableCell>
            <TableCell>Actions</TableCell>
          </TableRow>
        </TableHead>
        <TableBody>
          {amlList.map((aml) => (
            <TableRow key={aml.plan_Number}>
              <TableCell>{aml.plan_Number}</TableCell>
              <TableCell>{aml.status}</TableCell>
              <TableCell>{aml.compliance_Date?.slice(0, 10)}</TableCell>
              <TableCell>{aml.comments}</TableCell>
              <TableCell>
                <Button onClick={() => handleEdit(aml)}>Edit</Button>
                <Button color="error" onClick={() => handleDelete(aml.plan_Number)}>
                  Delete
                </Button>
              </TableCell>
            </TableRow>
          ))}
        </TableBody>
      </Table>

      <Dialog open={open} onClose={handleClose}>
        <DialogTitle>{editId ? "Edit AML" : "Add AML"}</DialogTitle>
        <DialogContent>
          <TextField
            margin="dense"
            label="Plan Number"
            name="planNumber"
            value={form.planNumber}
            onChange={handleChange}
            fullWidth
            disabled={editId !== null} // disable when editing
          />
          <TextField
            margin="dense"
            label="Status"
            name="status"
            value={form.status}
            onChange={handleChange}
            fullWidth
          />
          <TextField
            margin="dense"
            label="Compliance Date"
            name="complianceDate"
            type="date"
            value={form.complianceDate}
            onChange={handleChange}
            fullWidth
            InputLabelProps={{ shrink: true }}
          />
          <TextField
            margin="dense"
            label="Comments"
            name="comments"
            value={form.comments}
            onChange={handleChange}
            fullWidth
          />
        </DialogContent>
        <DialogActions>
          <Button onClick={handleClose}>Cancel</Button>
          <Button onClick={handleSave} variant="contained" color="primary">
            {editId ? "Update" : "Save"}
          </Button>
        </DialogActions>
      </Dialog>
    </div>
  );
};

export default AMLList;